from aiogram import Router
from aiogram.filters import CommandStart, CommandObject
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
import logging

from telegram_bot.keyboard.keyboard_builder import make_row_keyboards
from telegram_bot.keyboard.keyboards import select_type_improvement_graphics
from database.crud import CrudUser
from telegram_bot.config.settings import GetBotName

router = Router()
BOT_NAME = GetBotName.BOT_NAME

# –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
welcome_message = f"""
<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <u>{BOT_NAME}</u>!</b>

üéâ <b>–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 5 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π!</b>  
üöÄ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏—Ö –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π.

üìå <b>–ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç?</b>
üñºÔ∏è <b>–§–û–¢–û:</b>  
‚Ü≥ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è (–¥–æ 4K)  
‚Ü≥ –£–¥–∞–ª–µ–Ω–∏–µ —à—É–º–æ–≤ –∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤  
‚Ü≥ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –ª–∏—Ü–∞ –∏ —Ç–µ–∫—Å—Ç—É—Ä  

üé• <b>–í–ò–î–ï–û:</b>  
‚Ü≥ –ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞  
‚Ü≥ –°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è  
‚Ü≥ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –±–∏—Ç—Ä–µ–π—Ç–∞ (—á—ë—Ç—á–µ, –ø–ª–∞–≤–Ω–µ–µ)

üí° <b>–ö–∞–∫ –Ω–∞—á–∞—Ç—å?</b>
1Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å: <i>–§–æ—Ç–æ</i> –∏–ª–∏ <i>–í–∏–¥–µ–æ</i>  
2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª <b>–≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ (–∫–∞–∫ —Ñ–∞–π–ª)</b>  
3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ <b>AI-—É–ª—É—á—à–µ–Ω–Ω—É—é</b> –≤–µ—Ä—Å–∏—é –∑–∞ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥!

üéÅ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:</b>  
–ü—Ä–∏–≤–µ–¥–∏ –¥—Ä—É–≥–∞ ‚Äî –∏ –ø–æ–ª—É—á–∏ <b>50‚ÇΩ</b> –Ω–∞ –±–∞–ª–∞–Ω—Å –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ!  
–¢–≤–æ—è —Å—Å—ã–ª–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ, –≤ —Ä–∞–∑–¥–µ–ª–µ <b>¬´–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞¬ª</b>.

üíé <b>–•–æ—Ç–∏—Ç–µ –±–æ–ª—å—à–µ —É–ª—É—á—à–µ–Ω–∏–π?</b>  
–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø: <b>/subscription</b>

ü§ù <b>–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ</b>  
–•–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç?  
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É ‚Äî –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è!

üõ†Ô∏è <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>  
–í–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–±–æ—Ç–æ–π –±–æ—Ç–∞?  
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.

üí¨ <i>–ì–æ—Ç–æ–≤—ã –ø—Ä–µ–æ–±—Ä–∞–∑–∏—Ç—å —Å–≤–æ–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã? –ñ–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!</i>
"""


def extract_referred_id(payload: str | None) -> int | None:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç telegram_id –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –∏–∑ payload, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å.
    """
    if payload and payload.startswith("ref_"):
        try:
            return int(payload.split("_")[1])
        except (IndexError, ValueError):
            pass
    return None


@router.message(CommandStart())
async def start_handler(message: Message, state: FSMContext, command: CommandObject):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–∞.
    """
    await state.clear()

    referred_by_telegram_id = extract_referred_id(command.args)
    crud = CrudUser()

    try:
        user = await crud.add_user(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            firstname=message.from_user.first_name,
            lastname=message.from_user.last_name,
            platform="Telegram",
            day_count=5,
            is_active=True,
            is_admin=False,
            referred_by_telegram_id=referred_by_telegram_id,
        )
        if user:
            logging.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.telegram_id} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")
        else:
            logging.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {e}", exc_info=True)

    await message.answer(
        text=welcome_message,
        reply_markup=make_row_keyboards(select_type_improvement_graphics),
    )
