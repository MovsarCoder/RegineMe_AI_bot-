from datetime import datetime

from aiogram import Router, F, Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, BufferedInputFile, CallbackQuery

from telegram_bot.keyboard.keyboard_builder import make_row_inline_keyboards
from telegram_bot.keyboard.keyboards import back_video
from telegram_bot.states.state import Video
from telegram_bot.services.video_tools import enhance_video
from telegram_bot.utils.file_saver import save_file_from_message
from database.crud import CrudUser

router = Router()


@router.message(F.text.startswith("üé¨ –£–ª—É—á—à–∏—Ç—å –≤–∏–¥–µ–æ ‚Äî —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞"))
async def handle_video_improvement_start(message: Message, state: FSMContext):
    await state.clear()

    crud_user = CrudUser()
    user = await crud_user.get_user_by_id(message.from_user.id)

    now = datetime.now()
    has_active_subscription = any(
        sub.is_active and sub.expires_at > now
        for sub in user.subscriptions
    )

    if not has_active_subscription:
        day_count = user.day_count or 0
        if day_count <= 0:
            await message.answer(
                "‚ö†Ô∏è –£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –¥–Ω–µ–≤–Ω—ã–µ –ª–∏–º–∏—Ç—ã –Ω–∞ —É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.\n\n"
                "üìÜ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ 5 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π. "
                "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞ –∑–∞–≤—Ç—Ä–∞.\n\n"
                "üöÄ –•–æ—Ç–∏—Ç–µ –±–µ–∑–ª–∏–º–∏—Ç? –û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ <b>/subscriptions</b>."
            )
            return

    await message.answer(
        "üì∑ <b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ</b>, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å.\n\n"
        "‚ö†Ô∏è <i>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–∫ —Ñ–∞–π–ª –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞</i>.",
        reply_markup=make_row_inline_keyboards(back_video)
    )

    await state.set_state(Video.get_video)


@router.message(Video.get_video, F.video)
async def handle_video_received(message: Message, state: FSMContext, bot: Bot):
    get_video_message = await message.answer("üì• –ü–æ–ª—É—á–∞—é –≤–∏–¥–µ–æ...")

    input_path = await save_file_from_message(message, bot)

    improvement_video_message = await message.answer("üîß –£–ª—É—á—à–∞—é –≤–∏–¥–µ–æ, —ç—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...")

    output_path = await enhance_video(input_path)

    # –û—Ç–ø—Ä–∞–≤–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª
    with open(input_path, "rb") as original_file:
        await bot.send_video(
            chat_id=message.from_user.id,
            video=BufferedInputFile(original_file.read(), filename="original.mp4"),
            caption="üé¨ <b>–î–æ —É–ª—É—á—à–µ–Ω–∏—è</b>",
        )

    # –û—Ç–ø—Ä–∞–≤–∏–º —É–ª—É—á—à–µ–Ω–Ω—É—é
    with open(output_path, "rb") as enhanced_file:
        await bot.send_video(
            chat_id=message.from_user.id,
            video=BufferedInputFile(enhanced_file.read(), filename="enhanced.mp4"),
            caption="‚ú® <b>–ü–æ—Å–ª–µ —É–ª—É—á—à–µ–Ω–∏—è</b>",
        )

    try:
        from telegram_bot.utils.file_cleanup import remove_files_quietly
        remove_files_quietly(input_path, output_path)
        await get_video_message.delete()
        await improvement_video_message.delete()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")

    await state.clear()


# –ö–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —á—Ç–æ-—Ç–æ –∫—Ä–æ–º–µ –≤–∏–¥–µ–æ
@router.message(Video.get_video)
async def handle_invalid_content_type(message: Message, state: FSMContext):
    await message.answer(
        "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–º–µ–Ω–Ω–æ –≤–∏–¥–µ–æ!",
        reply_markup=make_row_inline_keyboards(back_video)
    )

    await state.set_state(Video.get_video)


# –û—Ç–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ
@router.callback_query(F.data == 'cancel_video')
async def cancel_sending_video(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.edit_text("‚ùå –ó–∞—è–≤–∫–∞ –Ω–∞ —É–ª—É—á—à–µ–Ω–∏–µ –≤–∏–¥–µ–æ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    await callback.answer()
