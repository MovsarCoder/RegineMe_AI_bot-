from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from database.crud import CrudGroup
from telegram_bot.keyboard.keyboard_builder import make_row_inline_keyboards
from telegram_bot.keyboard.keyboards import admin_keyboard
from telegram_bot.states.state import AddGroupStates
import re

router = Router()

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ username
USERNAME_REGEX = re.compile(r"^[a-zA-Z0-9_]{5,32}$")


@router.callback_query(F.data == 'add_group_to_subscription')
async def ask_group_name(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.answer(
        "üìù –í–≤–µ–¥–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã</b>, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞ –∫–Ω–æ–ø–∫–µ:",
        parse_mode="HTML"
    )
    await state.set_state(AddGroupStates.get_name)


@router.message(AddGroupStates.get_name)
async def ask_group_username(message: Message, state: FSMContext):
    name = message.text.strip()
    if not name:
        await message.answer("‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return

    await state.update_data(name_group=name)
    await message.answer("üîó –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ <b>username –≥—Ä—É–ø–ø—ã</b> (–±–µ–∑ @):")
    await state.set_state(AddGroupStates.get_username)


@router.message(AddGroupStates.get_username)
async def save_group(message: Message, state: FSMContext):
    username = message.text.strip()

    if not USERNAME_REGEX.fullmatch(username):
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç username. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –ª–∞—Ç–∏–Ω–∏—Ü—ã, —Ü–∏—Ñ—Ä –∏–ª–∏ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–π –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Ç 5 –¥–æ 32 —Å–∏–º–≤–æ–ª–æ–≤.")
        return

    data = await state.get_data()
    group_name = data.get("name_group")

    crud = CrudGroup()
    added = await crud.add_group(group_name=group_name, group_username=username)

    if added:
        await message.answer(f"‚úÖ –ì—Ä—É–ø–ø–∞ <b>{group_name}</b> (@{username}) —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!", )
    else:
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.")

    await state.clear()
    await message.answer(
        "üìã –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=make_row_inline_keyboards(admin_keyboard)
    )
